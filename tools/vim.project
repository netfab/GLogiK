GLogiK=$PWD/.. CD=. {
	.gitignore
	AUTHORS
	COPYING
	ChangeLog
	NEWS
	README
	VERSION
	configure.ac
	Makefile.am
	tools=tools/ {
		Makefile
		dbus-glogik.sh
	}
	macro=m4/ {
	}
	data=data/ {
		Makefile.am
		dbus=dbus/ {
			Makefile.am
			GLogiK.conf
		}
	}
	srcfiles=src/ {
		Makefile.am
		include=include/ {
			Makefile.am
			enums.h
			glogik.h
		}
		binaries=bin/ {
			Makefile.am
			daemon=daemon/ {
				Makefile.am
				main.cpp
				client.cpp
				client.h
				clientsManager.cpp
				clientsManager.h
				daemon.cpp
				daemon.h
				daemonControl.cpp
				daemonControl.h
				devicesManager.cpp
				devicesManager.h
				keyboardDriver.cpp
				keyboardDriver.h
				logitechG510.cpp
				logitechG510.h
				macrosManager.cpp
				macrosManager.h
				virtualKeyboard.cpp
				virtualKeyboard.h
			}
			desktop_service=service/ {
				Makefile.am
				main.cpp
				devicesHandler.cpp
				devicesHandler.h
				service.cpp
				service.h
				serviceDBusHandler.cpp
				serviceDBusHandler.h
			}
		}
		libraries=lib/ {
			Makefile.am
			GLogiKDBus=dbus/ {
				Makefile.am
				GKDBus.cpp
				GKDBus.h
				GKDBusEvents.cpp
				GKDBusEvents.h
				GKDBusMessage.cpp
				GKDBusMessage.h
				GKDBusMessageReply.cpp
				GKDBusMessageReply.h
				GKDBusMessageErrorReply.cpp
				GKDBusMessageErrorReply.h
				GKDBusRemoteMethodCall.cpp
				GKDBusRemoteMethodCall.h
				GKDBusBroadcastSignal.cpp
				GKDBusBroadcastSignal.h
			}
			GLogiKShared=shared/ {
				Makefile.am
				deviceProperties.cpp
				deviceProperties.h
				keyEvent.h
				macrosBanks.cpp
				macrosBanks.h
				sessionManager.cpp
				sessionManager.h
			}
			GLogiKUtils=utils/ {
				Makefile.am
				functions.cpp
				functions.h
				exception.cpp
				exception.h
				log.h
				utils.h
			}
		}
	}
}

