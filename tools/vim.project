GLogiK=$PWD/.. CD=. {
	.gitignore
	AUTHORS
	COPYING
	ChangeLog
	NEWS.md
	README.md
	TODO
	VERSION
	configure.ac
	Makefile.am
	doc=doc/ {
		debian_9.x_stretch
	}
	tools=tools/ {
		Makefile
		do-release.sh
		glogik-daemon.sh
		glogik-client.sh
	}
	macro=m4/ {
	}
	data=data/ {
		autostart=autostart/ {
			Makefile.am
			glogik-desktop-service.desktop
		}
		bash=bash/ {
			mediakey.sh
		}
		dbus=dbus/ {
			Makefile.am
			GLogiK.conf.in
		}
		init=init/ {
			openrc=openrc/ {
				Makefile.am
				glogikd
			}
			systemd=systemd/ {
			}
		}
		udev=udev/ {
			Makefile.am
			99-GLogiK.rules.in
		}
	}
	src=src/ {
		include=include/ {
			Makefile.am
			enums.h
			keyEvent.h
		}
		binaries=bin/ {
			daemon=daemon/ {
				Makefile.am
				main.cpp
				client.cpp
				client.h
				clientsManager.cpp
				clientsManager.h
				clientsSignals.cpp
				clientsSignals.h
				daemon.cpp
				daemon.h
				daemonControl.cpp
				daemonControl.h
				devicesManager.cpp
				devicesManager.h
				keyboardDriver.cpp
				keyboardDriver.h
				libUSB.cpp
				libUSB.h
				logitechG510.cpp
				logitechG510.h
				macrosManager.cpp
				macrosManager.h
				USBDevice.cpp
				USBDevice.h
				DeviceID.h
				virtualKeyboard.cpp
				virtualKeyboard.h
			}
			service=service/ {
				Makefile.am
				main.cpp
				devicesHandler.cpp
				devicesHandler.h
				service.cpp
				service.h
				serviceDBusHandler.cpp
				serviceDBusHandler.h
			}
		}
		libraries=lib/ {
			GKDBus=dbus/ {
				Makefile.am
				arguments=arguments/ {
					GKDBusArgument.cpp
					GKDBusArgument.h
					GKDBusArgString.cpp
					GKDBusArgString.h
					GKDBusArgBoolean.cpp
					GKDBusArgBoolean.h
					GKDBusArgByte.cpp
					GKDBusArgByte.h
					GKDBusArgUInt16.cpp
					GKDBusArgUInt16.h
					GKDBusArgUInt64.cpp
					GKDBusArgUInt64.h
					GKDBusArgMacro.cpp
					GKDBusArgMacro.h
					GKDBusArgMacrosBank.cpp
					GKDBusArgMacrosBank.h
				}
				events=events/ {
					GKDBusEvent.cpp
					GKDBusEvent.h
					GKDBusEventTemplates.cpp
					GKDBusEventTemplates.h
				}
				messages=messages/ {
					GKDBusMessage.cpp
					GKDBusMessage.h
					GKDBusReply.cpp
					GKDBusReply.h
					GKDBusErrorReply.cpp
					GKDBusErrorReply.h
					GKDBusRemoteMethodCall.cpp
					GKDBusRemoteMethodCall.h
					GKDBusBroadcastSignal.cpp
					GKDBusBroadcastSignal.h
					GKDBusTargetsSignal.cpp
					GKDBusTargetsSignal.h
					GKDBusAsyncContainer.cpp
					GKDBusAsyncContainer.h
				}
				GKDBus.cpp
				GKDBus.h
				GKDBusConnection.h
				GKDBusEvents.cpp
				GKDBusEvents.h
			}
			GKShared=shared/ {
				Makefile.am
				deviceProperties.cpp
				deviceProperties.h
				glogik.cpp
				glogik.h
				macrosBanks.cpp
				macrosBanks.h
				sessionManager.cpp
				sessionManager.h
			}
			GKUtils=utils/ {
				Makefile.am
				filesystem.cpp
				filesystem.h
				FSNotify.cpp
				FSNotify.h
				functions.cpp
				functions.h
				exception.cpp
				exception.h
				log.h
				randomGenerator.cpp
				randomGenerator.h
				utils.h
				XDGUserDirs.cpp
				XDGUserDirs.h
			}
		}
	}
}

